---
name: Titanium.Android.RemoteViews
summary: The Titanium binding of [Android RemoteViews](http://developer.android.com/reference/android/widget/RemoteViews.html). RemoteViews are an API for referencing and updating views that live in another process (i.e. in a <Titanium.Android.Notification>)
extends: Titanium.Proxy
platforms: [android]
createable: false
since: "1.6"
methods:
  - name: setBoolean
    summary: Call a method taking one boolean on a view in the layout for this RemoteViews. See Android's documentation for [setBoolean](http://developer.android.com/reference/android/widget/RemoteViews.html#setBoolean(int, java.lang.String, boolean))
    parameters:
      - name: viewId
        summary: The resource id of the View (also see <Titanium.App.Android.R>)
        type: Number
      - name: methodName
        summary: The name of the method to call
        type: String
      - name: value
        summary: The boolean to pass to the method
        type: Boolean
  - name: setChronometer
    summary: Sets a chronometer's base, format, and started flag. See Android's documentation for [setChronometer](http://developer.android.com/reference/android/widget/RemoteViews.html#setChronometer(int, long, java.lang.String, boolean))
    parameters:
      - name: viewId
        summary: The resource id of the Chronometer whose values will change (also see <Titanium.App.Android.R>)
        type: Number
      - name: base
        summary: The time at which the timer would have read 0:00
        type: Date
      - name: format
        summary: The Chronometer format string, or null to simply display the timer value
        type: String
      - name: started
        summary: True if you want the clock to be started, false if not
        type: Boolean
  - name: setDouble
    summary: Call a method taking one double on a view in the layout for this RemoteViews. See Android's documentation for [setDouble](http://developer.android.com/reference/android/widget/RemoteViews.html#setDouble(int, java.lang.String, double))
    parameters:
      - name: viewId
        summary: The resource id of the View (also see <Titanium.App.Android.R>)
        type: Number
      - name: methodName
        summary: The name of the method to call
        type: String
      - name: value
        summary: The double to pass to the method
        type: Number
  - name: setImageViewResource
    summary: Sets an ImageView's source given a Resource ID. See Android's documentation for [setImageViewResource](http://developer.android.com/reference/android/widget/RemoteViews.html#setImageViewResource(int, int))
    parameters:
      - name: viewId
        summary: The resource id of the ImageView whose image should change (also see <Titanium.App.Android.R>)
        type: Number
      - name: srcId
        summary: The resource id of the image
        type: Number
  - name: setImageViewUri
    summary: Sets an ImageView's source given a URI (supports both Android and Titanium URLs). See Android's documentation for [setImageViewUri](http://developer.android.com/reference/android/widget/RemoteViews.html#setImageViewUri(int, android.net.Uri))
    parameters:
      - name: viewId
        summary: The resource id of the ImageView whose image should change (also see <Titanium.App.Android.R>)
        type: Number
      - name: uri
        summary: The URI of the image (both Android and Titanium URLs are supported)
        type: String
  - name: setInt
    summary: Call a method taking one int on a view in the layout for this RemoteViews. See Android's documentation for [setInt](http://developer.android.com/reference/android/widget/RemoteViews.html#setInt(int, java.lang.String, int))
    parameters:
      - name: viewId
        summary: The resource id of the View (also see <Titanium.App.Android.R>)
        type: Number
      - name: methodName
        summary: The name of the method to call
        type: String
      - name: value
        summary: The int to pass to the method
        type: Number
  - name: setOnClickPendingIntent
    summary: Launches a <Titanium.Android.PendingIntent> when the specified view is clicked. See Android's documentation for [setOnClickPendingIntent](http://developer.android.com/reference/android/widget/RemoteViews.html#setOnClickPendingIntent(int, android.app.PendingIntent))
    parameters:
      - name: viewId
        summary: The resource id of the View to add a click listener to (also see <Titanium.App.Android.R>)
        type: Number
      - name: pendingIntent
        summary: The PendingIntent to execute when this view is clicked
        type: Titanium.Android.PendingIntent
  - name: setProgressBar
    summary: Sets the progress, max value, and indeterminate flag of a ProgressBar. See Android's documentation for [setProgressBar](http://developer.android.com/reference/android/widget/RemoteViews.html#setProgressBar(int, int, int, boolean))
    parameters:
      - name: viewId
        summary: The resource id of the ProgressBar to change (also see <Titanium.App.Android.R>)
        type: Number
      - name: max
        summary: The new max value of the ProgressBar
        type: Number
      - name: progress
        summary: The new progress value of the ProgressBar (from 0..max)
        type: Number
      - name: indeterminate
        summary: Whether or not the progress in indeterminate
        type: Boolean
  - name: setString
    summary: Call a method taking one String on a view in the layout for this RemoteViews. See Android's documentation for [setString](http://developer.android.com/reference/android/widget/RemoteViews.html#setString(int, java.lang.String, java.lang.String))
    parameters:
      - name: viewId
        summary: The resource id of the View (also see <Titanium.App.Android.R>)
        type: Number
      - name: methodName
        summary: The name of the method to call
        type: String
      - name: value
        summary: The String to pass to the method
        type: String
  - name: setTextColor
    summary: Sets the text color of a view. See Android's documentation for [setTextColor](http://developer.android.com/reference/android/widget/RemoteViews.html#setTextColor(int, int))
    parameters:
      - name: viewId
        summary: The resource id of the View whose text color will change (also see <Titanium.App.Android.R>)
        type: Number
      - name: color
        summary: A color as an integer
        type: Number
  - name: setTextViewText
    summary: Sets the text of a TextView. See Android's documentation for [setTextViewText](http://developer.android.com/reference/android/widget/RemoteViews.html#setTextViewText(int, java.lang.CharSequence))
    parameters:
      - name: viewId
        summary: The resource id of the TextView whose text will change (also see <Titanium.App.Android.R>)
        type: Number
      - name: text
        summary: The new text of the TextView
        type: String
  - name: setUri
    summary: Call a method taking one Uri on a view in the layout for this RemoteViews. See Android's documentation for [setUri](http://developer.android.com/reference/android/widget/RemoteViews.html#setUri(int, java.lang.String, android.net.Uri))
    parameters:
      - name: viewId
        summary: The resource id of the View (also see <Titanium.App.Android.R>)
        type: Number
      - name: methodName
        summary: The name of the method to call
        type: String
      - name: value
        summary: The URI (as a string) to pass to the method
        type: String
  - name: setViewVisibility
    summary: Sets the visibility of a View. See Android's documentation for [setViewVisibility](http://developer.android.com/reference/android/widget/RemoteViews.html#setViewVisibility(int, int))
    parameters:
      - name: viewId
        summary: The resource id of the View whose visibility will change (also see <Titanium.App.Android.R>)
        type: Number
      - name: visibility
        summary: The visibility, one of <Titanium.Android.VISIBLE>, <Titanium.Android.INVISIBLE>, or <Titanium.Android.GONE>
        type: Number
examples:
  - title: Create a RemoteViews based on a custom layout called "custom_layout.xml", and set a label's text.
    example: |
            var AppR = Ti.App.Android.R;
            var customLayout = Ti.Android.createRemoteViews(AppR.layout.custom_layout);
            customLayout.setTextViewText(AppR.id.custom_text, "Hello World");
